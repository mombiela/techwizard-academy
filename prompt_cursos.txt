Hola, te voy a hablar del lenguaje STXT (SemanticText). 
Es un lenguaje escribir documentos estructurados. Los documentos tienen etiquetas 
separadas por el caracter ":", y están anidadas mediante tabuladores.
Con el mismo lenguaje se puede definir un namespace, que definirá 
un tipo de documento y las etiquetas permitidas y las que no.
Además, es una práctica habitual que los elementos tipo TEXT acepten formato markdown.

Te pongo un ejemplo de namespace, ya que lo vamos a usar:

Namespace: globalcampus.site/namespace.stxt
	Document:
		Navigation: (?)
			Previous: (?)
			Next: (?)
		Header: (*)
		Subheader: (*)
		Content: (*) TEXT
		Code: (*) TEXT
            
Te pongo un ejemplo de documento de ese namespace para ver las posibilidades que tiene, concretamente de un tema de un curso:

Document (globalcampus.site/namespace.stxt): Título del tema
	Header:	Cabecera de primer nivel
	Subheader: Cabecera de segundo nivel
	
	Content:
		Este es un contenido estilo markdown.
		
		Permitimos Listas:
		
		* Elemento 1
		* Elemento 2
		* Elemento 3
		
		Enlaces: [Texto del enlace](https://example.com)
		
		Se puede formatear texto: **Esto es negrita**, _Esto es con cursiva_
		Se puede insertar código: Esto es código
		
	Code:
		<h1>Esto es una cabecera HTML</h1>
		<h2>Esto es otra cabecera HTML</h2>
		<p>Esto es un párrafo</p>
		
	Subheader: Otra cabecera
	
	Code:
		function demo()
		{
			console.log("Hola mundo!");
		}
		
	Header: Otra cabecera de primer nivel.
	
	Content: 
		Otro texto en formato markdown.

Ten en cuenta que puedes hacer sin problema varias cabeceras principales con subheaders, pero como máximo sólo niveles Header y Subheader:

Document (globalcampus.site/namespace.stxt): Nombre del tema
	Header: Cabecera 1
	Subheader: Cabecera 1.1
	...
	Subheader: Cabecera 1.2
	...

	Header: Cabecera 2
	Subheader: Cabecera 2.1
	...
	Subheader: Cabecera 2.2
	...

Además, los nodos `Content`, `Code`, `Header`, Subheader siempre van al mismo nivel, no se anidan entre ellos.
Ejemplo correcto:
Document (globalcampus.site/namespace.stxt): Manejo de Eventos
	Header: Introducción
	Subheader: ¿Qué son los eventos en React?
	Content:
		Esto es contenido
	Code:
		Esto es código fuente

Ejemplo INCORRECTO:
Document (globalcampus.site/namespace.stxt): Manejo de Eventos
	Header: Introducción
	Subheader: ¿Qué son los eventos en React?
	Content:
		Esto es contenido
		Code:
			Esto es código fuente
		Content:
			Otro contenido

Más cosas: `Content` tiene formato markdown, y `Code` es directamente el código fuente de lo que estamos mostrando.

¿Lo has entendido todo?

		
Vale, me gustaría hacer un curso de "HTML para principiantes" y me gustaría que todos los contenidos y capítulos fueran hechos mediante STXT.
Me puedes hacer una tabla de contenido con el índice de los contenidos para el curso? 
Debes seguir el namespace del ejemplo Document (globalcampus.site/namespace.stxt).
Un ejemplo de documento sería de índíce seria:

Document (globalcampus.site/namespace.stxt):
	Header: Bloque I
	Content:
		* [Tema 1: bla, bla](tema-1)
		* [Tema 2: bla, bla](tema-2)
		* [Tema 3: bla, bla](tema-3)
	Header: Bloque II
	Content:
		* [Tema 4: bla, bla](tema-4)
		* [Tema 5: bla, bla](tema-5)
		* [Tema 6: bla, bla](tema-6)	
	Header: Bloque III
	Content:
		* [Tema 7: bla, bla](tema-7)
		* [Tema 8: bla, bla](tema-8)
		* [Tema 9: bla, bla](tema-9)
		
		
		

Te voy a ir pidiendo los otros temas poco a poco, y me gustaría que todos me los hagas usando STXT.
En ejemplo de estructura de documento de tema sería:

Document (globalcampus.site/namespace.stxt): Título del tema 2
	Navigation:
		Previous: Anterior (tema-1)
		Next: Siguiente (tema-3)
	Header:	Cabecera de primer nivel
	Subheader: Cabecera de segundo nivel
	
	Content:
		Este es un contenido estilo markdown.
		
		Permitimos Listas:
		
		* Elemento 1
		* Elemento 2
		* Elemento 3
		
		Enlaces: [Texto del enlace](https://example.com)
		
		Se puede formatear texto: **Esto es negrita**, _Esto es con cursiva_
		Se puede insertar código: Esto es código
		
	Code:
		<h1>Esto es una cabecera HTML</h1>
		<h2>Esto es otra cabecera HTML</h2>
		<p>Esto es un párrafo</p>
		
	Subheader: Otra cabecera
	
	Code:
		function demo()
		{
			console.log("Hola mundo!");
		}
		
	Header: Otra cabecera de primer nivel.
	
	Content: 
		Otro texto en formato markdown.


Pon todos los esfuerzos en el fichero resultante, no hace falta que me expliques el desglose de lo que has hecho. 
¿Empezamos por tema-1? Gracias!
