Document (globalcampus.site/namespace.stxt): Tema 5: Enlaces y navegación en HTML
	Navigation:
		Previous: Anterior (tema-04)
		Next: Siguiente (tema-06)
	Header: Creación de enlaces en HTML
	Subheader: La etiqueta `<a>`

	Content:
		La etiqueta `<a>` es utilizada para crear enlaces en HTML. Estos enlaces permiten a los usuarios navegar entre páginas web, descargar archivos, o realizar otras acciones al hacer clic en el texto o elemento enlazado. El atributo más importante de `<a>` es `href`, que especifica la URL o el destino del enlace.

	Code:
		<a href="https://example.com">Visita nuestro sitio web</a>

	Subheader: Enlaces internos y anclajes

	Content:
		Además de enlazar a otras páginas, puedes crear enlaces que dirijan al usuario a diferentes partes dentro de la misma página utilizando anclajes. Para ello, se utilizan los atributos `id` en el destino y `href` con el valor del `id` precedido por un `#`.

	Code:
		<!-- Enlace interno -->
		<a href="#seccion1">Ir a la Sección 1</a>

		<!-- Destino del enlace -->
		<h2 id="seccion1">Sección 1</h2>
		<p>Este es el contenido de la Sección 1.</p>

	Subheader: Enlaces externos

	Content:
		Los enlaces que apuntan a otras páginas web fuera del sitio actual se consideran enlaces externos. Es importante tener en cuenta la seguridad y usabilidad al crear estos enlaces. El atributo `target="_blank"` puede utilizarse para abrir el enlace en una nueva pestaña o ventana del navegador.

	Code:
		<a href="https://example.com" target="_blank">Visita Example.com en una nueva pestaña</a>

	Subheader: Enlaces de descarga

	Content:
		HTML permite que un enlace apunte a un archivo que se descargará al hacer clic en él, en lugar de abrirlo en el navegador. Esto se logra utilizando el atributo `download` en la etiqueta `<a>`.

	Code:
		<a href="archivo.pdf" download>Descargar archivo PDF</a>

	Subheader: Navegación con listas

	Content:
		Es común ver que los menús de navegación se crean utilizando listas no ordenadas (`<ul>`) con elementos de lista (`<li>`) que contienen enlaces (`<a>`). Esto es una práctica estándar en el desarrollo web, ya que facilita la organización y el estilo de los menús de navegación.

	Code:
		<nav>
			<ul>
				<li><a href="index.html">Inicio</a></li>
				<li><a href="about.html">Acerca de</a></li>
				<li><a href="contact.html">Contacto</a></li>
			</ul>
		</nav>

	Header: Buenas prácticas al usar enlaces
	
	Content: 
		Al trabajar con enlaces en HTML, es importante seguir ciertas buenas prácticas para asegurar la accesibilidad y la experiencia de usuario:
		
		1. **Texto descriptivo**: El texto del enlace debe ser claro y descriptivo para que los usuarios y los motores de búsqueda comprendan a dónde llevará el enlace.
		2. **Evitar "haz clic aquí"**: En lugar de usar "haz clic aquí", describe el destino o la acción que se realizará.
		3. **Enlaces accesibles**: Asegúrate de que los enlaces sean accesibles a través del teclado y que los lectores de pantalla puedan interpretarlos correctamente.
		4. **Verificación de enlaces**: Revisa regularmente que los enlaces funcionen y que no conduzcan a páginas inexistentes o rotas.

	Code:
		<!-- Ejemplo de un buen enlace -->
		<a href="https://www.w3.org/WAI/">Guía de accesibilidad web de la W3C</a>
