Unit(globalcampus.site/namespace.stxt): Introducción a CSS Grid
	
	Text: 
	    CSS Grid es un sistema de diseño bidimensional que permite a los desarrolladores web crear diseños complejos y responsivos con facilidad. A diferencia de Flexbox, que es un modelo de diseño unidimensional (fila o columna), CSS Grid permite trabajar en ambas dimensiones (filas y columnas) simultáneamente.
	    
	    *  **Características principales de CSS Grid**:
	    *  Proporciona un sistema de diseño bidimensional.
	    *  Permite definir filas y columnas en un contenedor.
	    *  Facilita la creación de diseños complejos y responsivos.
	    *  Ofrece control preciso sobre el tamaño, la alineación y el espacio entre elementos.
	    
	H1: Componentes de CSS Grid
	
	Text:
	    
	    *  **Grid Container**:
	    *  El elemento contenedor al que se aplica la propiedad ```display: grid;``` o ```display: inline-grid;```.
	    *  Define un nuevo contexto de cuadrícula para sus elementos hijos (grid items).
	    
	    *  **Grid Items**:
	    *  Los elementos hijos directos del contenedor de cuadrícula.
	    *  Se posicionan en filas y columnas dentro del contenedor de cuadrícula.
	    
	H1: Propiedades del Grid Container
	
	Text:
	    
	    *  **display**:
	    *  Define el elemento como un contenedor de cuadrícula.
	    *  Ejemplos:
	    *  ```display: grid;```
	    *  ```display: inline-grid;```
	    
	    *  **grid-template-columns**:
	    *  Define el número y el tamaño de las columnas en la cuadrícula.
	    *  Ejemplo: ```grid-template-columns: 1fr 2fr 1fr;```
	    
	    *  **grid-template-rows**:
	    *  Define el número y el tamaño de las filas en la cuadrícula.
	    *  Ejemplo: ```grid-template-rows: 100px auto 100px;```
	    
	    *  **grid-gap** (o ```gap```):
	    *  Define el espacio entre filas y columnas en la cuadrícula.
	    *  Ejemplo: ```grid-gap: 10px;```
	    
	    *  **grid-template-areas**:
	    *  Permite nombrar áreas dentro de la cuadrícula para facilitar la colocación de los ítems.
	    *  Ejemplo:
	Code:
	    grid-template-areas:
	    "header header header"
	    "sidebar content content"
	    "footer footer footer";
	
	
	Text:
	    
	H1: Propiedades de los Grid Items
	
	Text:
	    
	    *  **grid-column**:
	    *  Define la posición y el tamaño del ítem en las columnas.
	    *  Ejemplo: ```grid-column: 1 / 3;``` (el ítem se extiende desde la columna 1 hasta la 3)
	    
	    *  **grid-row**:
	    *  Define la posición y el tamaño del ítem en las filas.
	    *  Ejemplo: ```grid-row: 2 / 4;``` (el ítem se extiende desde la fila 2 hasta la 4)
	    
	    *  **grid-area**:
	    *  Asigna un ítem a un área nombrada definida por ```grid-template-areas```.
	    *  Ejemplo: ```grid-area: header;```
	    
	H1: Ejemplo básico de CSS Grid
	
	Text:
	    
	Code:
	    .container {
	    display: grid;
	    grid-template-columns: 1fr 2fr 1fr;
	    grid-template-rows: 100px auto 100px;
	    grid-gap: 10px;
	    }
	    .header {
	    grid-area: header;
	    background-color: lightblue;
	    }
	    .sidebar {
	    grid-area: sidebar;
	    background-color: lightgreen;
	    }
	    .content {
	    grid-area: content;
	    background-color: lightcoral;
	    }
	    .footer {
	    grid-area: footer;
	    background-color: lightgray;
	    }
	
	
	Text:
	    
	    En este ejemplo:
	    *  El contenedor de cuadrícula tiene tres columnas y tres filas definidas con ```grid-template-columns``` y ```grid-template-rows```.
	    *  Se utiliza ```grid-gap``` para definir el espacio entre filas y columnas.
	    *  Los ítems se posicionan utilizando ```grid-area```.
	    
	H1: Diagrama de CSS Grid
	
	Text:
	    
	    ```startuml```
	    +--------------------------------------------------+
	    | Contenedor (display: grid)                       |
	    | +-------------------+-------------------+--------|
	    | |       header         |       header         |        |
	    | +-------------------+-------------------+--------|
	    | | sidebar             |      content          |        |
	    | | sidebar             |      content          |        |
	    | +-------------------+-------------------+--------|
	    | | footer                   |      footer              |
	    | +-------------------+-------------------+--------|
	    +--------------------------------------------------+
	    ```enduml```
	    
	    En este diagrama, se muestra cómo los ítems se posicionan y se distribuyen dentro del contenedor de cuadrícula utilizando las propiedades mencionadas.
	    
	    *  [[https://developer.mozilla.org/es/docs/Web/CSS/CSS_Grid_Layout|Documentación sobre CSS Grid en CSS]]
	    
