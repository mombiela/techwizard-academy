Unit(globalcampus.site/namespace.stxt): Propiedades display y visibility
	
	Text: 
	    *  **Propiedad display**:
	    
	    La propiedad ```display``` controla cómo se muestra un elemento en la página. Puede cambiar el comportamiento del elemento desde ser un contenedor de nivel de bloque hasta un elemento de línea, o incluso ocultarlo.
	    
	    *  **Valores comunes de display**:
	    *  ```block```: Hace que el elemento sea un contenedor de bloque, ocupando todo el ancho disponible. Ejemplo: ```display: block;```
	    *  ```inline```: Hace que el elemento sea un contenedor en línea, ocupando solo el espacio necesario. Ejemplo: ```display: inline;```
	    *  ```inline-block```: Hace que el elemento sea un contenedor en línea, pero permite establecer dimensiones. Ejemplo: ```display: inline-block;```
	    *  ```none```: Oculta el elemento y lo elimina del flujo del documento. Ejemplo: ```display: none;```
	    *  ```flex```: Hace que el elemento sea un contenedor flexible (flex container). Ejemplo: ```display: flex;```
	    *  ```grid```: Hace que el elemento sea un contenedor de cuadrícula (grid container). Ejemplo: ```display: grid;```
	    
	    *  **Propiedad visibility**:
	    
	    La propiedad ```visibility``` controla la visibilidad de un elemento sin quitarlo del flujo del documento. A diferencia de ```display: none```, los elementos ocultos con ```visibility``` siguen ocupando espacio en el diseño.
	    
	    *  **Valores comunes de visibility**:
	    *  ```visible```: Hace que el elemento sea visible. Este es el valor predeterminado. Ejemplo: ```visibility: visible;```
	    *  ```hidden```: Oculta el elemento pero deja el espacio que ocupa en el diseño. Ejemplo: ```visibility: hidden;```
	    *  ```collapse```: Solo aplicable a elementos de fila de tabla. Oculta el elemento y quita su espacio en el diseño. Ejemplo: ```visibility: collapse;```
	    
	h2: Ejemplo de uso de propiedades display y visibility
	
	Text:
	    
	Code:
	    .block-element {
	    display: block;
	    width: 100%;
	    background-color: lightgray;
	    }
	    .inline-element {
	    display: inline;
	    color: blue;
	    }
	    .hidden-element {
	    visibility: hidden;
	    }
	    .none-element {
	    display: none;
	    }
	
	
	Text:
	    
	    En este ejemplo:
	    *  Un elemento con la clase ```block-element``` se muestra como un contenedor de bloque que ocupa todo el ancho disponible.
	    *  Un elemento con la clase ```inline-element``` se muestra como un contenedor en línea con texto de color azul.
	    *  Un elemento con la clase ```hidden-element``` se oculta, pero sigue ocupando espacio en el diseño.
	    *  Un elemento con la clase ```none-element``` se oculta y se elimina del flujo del documento.
	    
	    *  **Propiedades display y visibility en acción**:
	    
	    ```startuml```
	    +--------------------------+
	    | display: block                  |
	    | +----------------------+ |
	    | |  Contenido                 | |
	    | +----------------------+ |
	    |                                 |
	    | display: inline             |
	    |  Contenido                  |
	    |                                 |
	    | display: none                  |
	    |  (Elemento no visible)        |
	    |                                 |
	    | visibility: hidden          |
	    | +----------------------+ |
	    | |(Elemento oculto pero| |
	    | |  ocupa espacio)           |
	    | +----------------------+ |
	    +--------------------------+
	    ```enduml```
	    
	    En este diagrama, se muestra cómo diferentes valores de ```display``` y ```visibility``` afectan la visibilidad y el espacio ocupado por los elementos.
	    
	    *  [[https://developer.mozilla.org/es/docs/Web/CSS/display|Documentación sobre la propiedad display en CSS]]
	    *  [[https://developer.mozilla.org/es/docs/Web/CSS/visibility|Documentación sobre la propiedad visibility en CSS]]
