Document (globalcampus.site/namespace.stxt): Estructuras Condicionales
	Navigation:
		Previous: Operadores y Expresiones (03-operadores-expresiones)
		Next: Bucles y Iteraciones (05-bucles-iteraciones)
	Header: Estructuras Condicionales en JavaScript
	Subheader: Introducción a las Estructuras Condicionales
	
	Content:
		Las estructuras condicionales permiten ejecutar diferentes bloques de código basados en ciertas condiciones. 
		JavaScript soporta varias estructuras condicionales que ayudan a tomar decisiones en función del resultado de una expresión booleana.

		Las estructuras condicionales más comunes en JavaScript incluyen:

		* `if` - Ejecuta un bloque de código si una condición es verdadera.
		* `else` - Ejecuta un bloque de código si la condición en el `if` es falsa.
		* `else if` - Verifica una nueva condición si las condiciones anteriores son falsas.
		* `switch` - Evalúa una expresión y ejecuta el bloque de código correspondiente a su valor.

	Code:
		// Ejemplo básico de estructura condicional if-else
		let hora = 10;

		if (hora < 12) {
			console.log("Buenos días");
		} else {
			console.log("Buenas tardes");
		}

	Subheader: La estructura `if-else`
	
	Content:
		La estructura `if-else` es la más básica y común. Permite ejecutar un bloque de código si una condición es verdadera 
		y otro bloque si es falsa.

		La sintaxis básica es la siguiente:

		```javascript
		if (condición) {
			// Código a ejecutar si la condición es verdadera
		} else {
			// Código a ejecutar si la condición es falsa
		}
		```

		Ejemplo de uso:

	Code:
		// Ejemplo de uso de if-else
		let edad = 20;

		if (edad >= 18) {
			console.log("Es mayor de edad");
		} else {
			console.log("Es menor de edad");
		}

	Subheader: La estructura `else if`
	
	Content:
		La estructura `else if` se utiliza cuando necesitamos verificar múltiples condiciones. 
		Se coloca después de un `if` o de otro `else if` y antes de un `else` final, si lo hay.

		La sintaxis básica es la siguiente:

		```javascript
		if (condición1) {
			// Código si condición1 es verdadera
		} else if (condición2) {
			// Código si condición2 es verdadera
		} else {
			// Código si ninguna condición es verdadera
		}
		```

		Ejemplo de uso:

	Code:
		// Ejemplo de uso de else if
		let nota = 85;

		if (nota >= 90) {
			console.log("Sobresaliente");
		} else if (nota >= 80) {
			console.log("Notable");
		} else if (nota >= 70) {
			console.log("Aprobado");
		} else {
			console.log("Suspendido");
		}

	Subheader: La estructura `switch`
	
	Content:
		La estructura `switch` evalúa una expresión y ejecuta el bloque de código correspondiente al valor de esa expresión.
		Es útil cuando se tienen múltiples condiciones basadas en un solo valor.

		La sintaxis básica es la siguiente:

		```javascript
		switch (expresión) {
			case valor1:
				// Código a ejecutar si expresión === valor1
				break;
			case valor2:
				// Código a ejecutar si expresión === valor2
				break;
			default:
				// Código a ejecutar si ninguno de los casos coincide
		}
		```

		Ejemplo de uso:

	Code:
		// Ejemplo de uso de switch
		let diaSemana = 3;
		let diaNombre;

		switch (diaSemana) {
			case 1:
				diaNombre = "Lunes";
				break;
			case 2:
				diaNombre = "Martes";
				break;
			case 3:
				diaNombre = "Miércoles";
				break;
			case 4:
				diaNombre = "Jueves";
				break;
			case 5:
				diaNombre = "Viernes";
				break;
			case 6:
				diaNombre = "Sábado";
				break;
			case 7:
				diaNombre = "Domingo";
				break;
			default:
				diaNombre = "Día no válido";
		}

		console.log(diaNombre); // Output: Miércoles

	Header: Operador Ternario como alternativa
	
	Content: 
		Como vimos en el tema anterior, el operador ternario `? :` es una alternativa compacta para una simple declaración `if-else`.

		Ejemplo de uso:

	Code:
		// Ejemplo de operador ternario
		let esNoche = hora > 18 ? "Sí, es de noche" : "No, aún es de día";
		console.log(esNoche); // Output dependerá de la variable 'hora'
