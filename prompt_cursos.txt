Hola, te voy a hablar del lenguaje STXT (SemanticText). 
Es un lenguaje escribir documentos estructurados. Los documentos tienen etiquetas 
separadas por el caracter ":", y están anidadas mediante tabuladores.
Con el mismo lenguaje se puede definir un namespace, que definirá 
un tipo de documento y las etiquetas permitidas y las que no.
Además, es una práctica habitual que los elementos tipo TEXT acepten formato markdown.

Te pongo un ejemplo de namespace:

Namespace: globalcampus.site/namespace.stxt
	Document:
		Default: (?)
		Metadata: (?)
			title: (?)
			description: (?)
			author: (?)
			last modif: (?) DATE
			id public: (?)
			lang: (?)
		Navigation: (?)
			Previous: (?)
			Next: (?)
		Preamble: (?) TEXT
		Header: (*)
		Subheader: (*)
		Content: (*) TEXT
		Math: (*) TEXT
		Assert: (*) TEXT
		Alert: (*) TEXT
		Code: (*) TEXT
		Plantuml: (*) TEXT
		Html: (*) TEXT

	Default:
		Title: (1)
		Subtitle: (?)
		Footer: (?)
		Left Menu: (?)
		Right menu: (?)
		Display src: (?) BOOLEAN
		Display edit: (?) BOOLEAN
            
Te pongo un ejemplo de documento de ese namespace:

Document (globalcampus.site/namespace.stxt):
	Header: ¡Bienvenidos!
	Alert: ¡Bienvenidos al primer **Meta Portal** de aprendizaje!
	Content: 
		Nuestro objetivo principal es crear una wiki global y descentralizada
		de aprendizaje. Ya se que es un objetivo muy ambicioso, pero todo
		proyecto empieza con una idea. 
	
		Parece precipitado, pero lo mejor es que lo probéis directamente
		[con la documentación](/#github/mombiela/globalcampus-docs/). También podéis probar nuestro editor (beta) para ver
		online cambios. El editor es local, los cambios sólo afectan al navegador local
		mientras se edita, no cambia la visualización normal. 
		
	Header: Proyectos asociados
	Content:
		¿Quieres que tu proyecto aparezca aquí? [¡Contacta con nosotros!](#contact)
		
		De momento tenemos pocos proyectos asociados, ya que acabamos de empezar:
		
		* [Semantic Text (version 1.0)](https://semantictext.info) 
		* [Semantic Text (version 2.0, next version)](#github/mombiela/stxt-book/es/)
		* [Tech Wizard Academy](#github/mombiela/techwizard-academy/) 
		

		
		
		
		
		
		
		
		
		
		
		
Vale, me gustaría hacer un curso de React para principiantes y me gustaría que todos los contenidos y capítulos fueran hechos mediante STXT. Me puedes hacer una tabla de contenido con el índice de los contenidos para el curso? Debes seguir el namespace del ejemplo Document (globalcampus.site/namespace.stxt).
Un ejemplo de documento sería de índíce seria:

Document (globalcampus.site/namespace.stxt):
	Header: Bloque I
	Content:
		* [Tema 1: bla, bla](tema-1)
		* [Tema 2: bla, bla](tema-2)
		* [Tema 3: bla, bla](tema-3)
	Header: Bloque II
	Content:
		* [Tema 4: bla, bla](tema-4)
		* [Tema 5: bla, bla](tema-5)
		* [Tema 6: bla, bla](tema-6)	
	Header: Bloque III
	Content:
		* [Tema 7: bla, bla](tema-7)
		* [Tema 8: bla, bla](tema-8)
		* [Tema 9: bla, bla](tema-9)
		
		
		
		
Te voy a hacer otro ejemplo de documento en STXT para que veas posibilidades que tiene:

Document (globalcampus.site/namespace.stxt): Document Title
	Header:	Cabecera de primer nivel
	Subheader: Cabecera de segundo nivel
	
	Content:
		Este es un contenido estilo wiki.
		
		Permitimos Listas:
		
		* Elemento 1
		* Elemento 2
		* Elemento 3
		
		Enlaces: [Texto del enlace](https://example.com)
		
		Se puede formatear texto: **Esto es negrita**, _Esto es con cursiva_
		Se puede insertar código: Esto es código
		
	Code:
		<h1>Esto es una cabecera HTML</h1>
		<h2>Esto es otra cabecera HTML</h2>
		<p>Esto es un párrafo</p>
		
	Subheader: Otra cabecera
	
	Code:
		function demo()
		{
			console.log("Hola mundo!");
		}

Ten en cuenta que puedes hacer sin problema varias cabeceras principales con subheaders, pero como máximo sólo niveles Header y Subheader:
Document (globalcampus.site/namespace.stxt): Nombre del tema
	Header: Cabecera 1
	Subheader: Cabecera 1.1
	...
	Subheader: Cabecera 1.2
	...

	Header: Cabecera 2
	Subheader: Cabecera 2.1
	...
	Subheader: Cabecera 2.2
	...


Vamos a hacer otro ajuste. Los nodos Content, Code, Header, Subheader siempre van al mismo nivel, no se anidan entre ellos.
Ejemplo correcto:
Document (globalcampus.site/namespace.stxt): Manejo de Eventos
	Header: Introducción
	Subheader: ¿Qué son los eventos en React?
	Content:
		Esto es contenido
	Code:
		Esto es código fuente

Ejemplo INCORRECTO:
Document (globalcampus.site/namespace.stxt): Manejo de Eventos
	Header: Introducción
	Subheader: ¿Qué son los eventos en React?
	Content:
		Esto es contenido
		Code:
			Esto es código fuente
		Content:
			Otro contenido

¿Lo has entendido?

Te voy a ir pidiendo los otros temas poco a poco, y me gustaría que todos me los hagas usando STXT.
Pon todos los esfuerzos en el fichero resultante, no hace falta que me expliques el desglose de lo que has hecho. 
¿Continuamos por tema-2? Gracias!
