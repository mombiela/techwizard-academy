Document (globalcampus.site/namespace.stxt): Descripción y uso de la División de Datos
	
	Text: 
	    La División de Datos en un programa COBOL es fundamental, ya que declara todas las variables y estructuras de datos que el programa utilizará. Esta división permite organizar y definir de manera detallada cómo se almacenan y manejan los datos en el programa. Se divide en tres secciones principales:
	    
	    *  **FILE SECTION**: Describe los archivos que se utilizarán en el programa. Cada archivo se define en términos de su estructura y sus campos. Esta sección es crucial para el manejo de archivos.
	    
	    *  **WORKING-STORAGE SECTION**: Declara las variables temporales y las estructuras de datos que el programa necesitará durante su ejecución. Aquí se definen las variables de trabajo, las constantes y otros elementos necesarios para la lógica del programa.
	    
	    *  **LINKAGE SECTION**: Se utiliza para definir los parámetros que se pasan entre programas. Esta sección es esencial cuando se trabaja con subprogramas y módulos externos.
	    
	    Un ejemplo básico de la División de Datos en un programa COBOL es el siguiente:
	    
	Code:
	    DATA DIVISION.
	    
	    FILE SECTION.
	    FD EmployeeFile.
	    01 EmployeeRecord.
	    05 EmployeeID    PIC X(5).
	    05 EmployeeName PIC X(30).
	    05 EmployeeSalary PIC 9(5)V99.
	    
	    WORKING-STORAGE SECTION.
	    01 WS-EmployeeCount PIC 9(3) VALUE 0.
	    01 WS-TotalSalary PIC 9(7)V99 VALUE 0.
	    
	    LINKAGE SECTION.
	    01 LK-Parameter1 PIC X(10).
	    01 LK-Parameter2 PIC 9(4).
	
	
	Text:
	    
	    En este ejemplo, la sección FILE define un archivo llamado ```EmployeeFile``` con una estructura de registro que incluye el ID del empleado, el nombre y el salario. La sección WORKING-STORAGE declara variables temporales para contar empleados y sumar los salarios totales. La sección LINKAGE define parámetros que se pasan a este programa desde otros programas.
	    
	    La División de Datos es crucial para establecer cómo se manejan los datos dentro del programa COBOL, asegurando que todos los elementos de datos estén claramente definidos y organizados. Esta estructura facilita el manejo de datos complejos y asegura que el programa pueda acceder y manipular la información de manera eficiente.
