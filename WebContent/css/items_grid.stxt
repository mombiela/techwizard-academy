Unit(globalcampus.site/namespace.stxt): Propiedades de los ítems Grid
	
	Text: 
	    
	    Las propiedades de los ítems Grid controlan cómo se comportan y se posicionan los elementos hijos dentro de un contenedor de cuadrícula. Estas propiedades permiten ajustar la posición, el tamaño y la alineación de los ítems en la cuadrícula.
	    
	    *  **grid-column**:
	    *  Define la posición y el tamaño del ítem en las columnas.
	    *  Ejemplo: ```grid-column: 1 / 3;``` (el ítem se extiende desde la columna 1 hasta la 3)
	    
	    *  **grid-row**:
	    *  Define la posición y el tamaño del ítem en las filas.
	    *  Ejemplo: ```grid-row: 2 / 4;``` (el ítem se extiende desde la fila 2 hasta la 4)
	    
	    *  **grid-area**:
	    *  Asigna un ítem a un área nombrada definida por ```grid-template-areas```.
	    *  Ejemplo: ```grid-area: header;```
	    
	    *  **justify-self**:
	    *  Controla la alineación de un ítem a lo largo del eje horizontal dentro de su celda.
	    *  Valores: ```start```, ```end```, ```center```, ```stretch```
	    *  Ejemplo: ```justify-self: center;```
	    
	    *  **align-self**:
	    *  Controla la alineación de un ítem a lo largo del eje vertical dentro de su celda.
	    *  Valores: ```start```, ```end```, ```center```, ```stretch```
	    *  Ejemplo: ```align-self: end;```
	    
	    *  **place-self**:
	    *  Propiedad abreviada para ```align-self``` y ```justify-self```.
	    *  Ejemplo: ```place-self: center start;``` (centra el ítem verticalmente y lo alinea al inicio horizontalmente)
	    
	H1: Ejemplo de código CSS para ítems Grid
	
	Text:
	    
	Code:
	    .container {
	    display: grid;
	    grid-template-columns: repeat(4, 1fr);
	    grid-template-rows: repeat(3, 100px);
	    gap: 10px;
	    }
	    .item1 {
	    grid-column: 1 / 3;
	    grid-row: 1 / 2;
	    background-color: lightcoral;
	    }
	    .item2 {
	    grid-column: 3 / 5;
	    grid-row: 1 / 3;
	    background-color: lightblue;
	    justify-self: center;
	    align-self: center;
	    }
	    .item3 {
	    grid-column: 1 / 2;
	    grid-row: 2 / 4;
	    background-color: lightgreen;
	    place-self: end center;
	    }
	
	
	Text:
	    
	    En este ejemplo:
	    *  El contenedor de cuadrícula tiene cuatro columnas y tres filas definidas con ```grid-template-columns``` y ```grid-template-rows```.
	    *  ```item1``` se extiende desde la columna 1 hasta la 3 y ocupa la fila 1.
	    *  ```item2``` se extiende desde la columna 3 hasta la 5 y desde la fila 1 hasta la 3, y se centra tanto horizontal como verticalmente.
	    *  ```item3``` se extiende desde la columna 1 hasta la 2 y desde la fila 2 hasta la 4, y se alinea al final verticalmente y al centro horizontalmente.
	    
	H1: Diagrama de ítems Grid con propiedades aplicadas
	
	Text:
	    
	    ```startuml```
	    +----------------------------------------------------+
	    | Contenedor (display: grid)                          |
	    |          grid-template-columns: repeat(4, 1fr);      |
	    |          grid-template-rows: repeat(3, 100px);      |
	    |          gap: 10px;                                 |
	    | +-----------------------+---------------+--------+|
	    | |     item1             |      item2            |      |
	    | +-----------------------+---------------+--------+|
	    | |                       |                        |      |
	    | |          item3          |      item2            |      |
	    | |                       |                        |      |
	    | +-----------------------+---------------+--------+|
	    +----------------------------------------------------+
	    ```enduml```
	    
	    En este diagrama, se muestra cómo los ítems se posicionan y se distribuyen dentro del contenedor de cuadrícula utilizando las propiedades mencionadas.
	    
	    *  [[https://developer.mozilla.org/es/docs/Web/CSS/CSS_Grid_Layout|Documentación sobre CSS Grid en CSS]]
	    
