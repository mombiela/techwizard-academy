Document (globalcampus.site/namespace.stxt): Variables y Tipos de Datos
	Navigation:
		Previous: Introducción a JavaScript (01-introduccion)
		Next: Operadores y Expresiones (03-operadores-expresiones)
	Header: Variables y Tipos de Datos en JavaScript
	Subheader: ¿Qué es una variable?
	
	Content:
		Una variable es un contenedor para almacenar datos en la memoria. 
		En JavaScript, puedes crear una variable usando las palabras clave `var`, `let`, o `const`.

		Las variables permiten a los programadores trabajar con datos de manera dinámica, 
		almacenando valores que pueden cambiar durante la ejecución del programa.

		Por ejemplo:
		
		* Puedes almacenar números.
		* Puedes almacenar cadenas de texto.
		* Puedes almacenar valores booleanos.
		* Puedes almacenar objetos y arreglos.

		Enlaces: [Documentación sobre variables en MDN](https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Grammar_and_types#Declaraci%C3%B3n_de_variables)

	Code:
		// Declaración de una variable usando 'let'
		let nombre = "Juan";
		console.log(nombre); // Output: Juan

		// Declaración de una constante usando 'const'
		const PI = 3.1416;
		console.log(PI); // Output: 3.1416

	Subheader: Tipos de datos en JavaScript
	
	Content:
		JavaScript es un lenguaje de tipado dinámico, lo que significa que las variables pueden contener valores 
		de diferentes tipos de datos en diferentes momentos.

		Los tipos de datos más comunes en JavaScript incluyen:

		* **Número**: Representa tanto enteros como decimales. Ejemplo: `42`, `3.14`.
		* **Cadena de texto (String)**: Una secuencia de caracteres. Ejemplo: `"Hola, mundo!"`.
		* **Booleano**: Representa un valor verdadero o falso. Ejemplo: `true`, `false`.
		* **Undefined**: Una variable que ha sido declarada pero no asignada.
		* **Null**: Representa la ausencia intencional de un valor.
		* **Objeto (Object)**: Una colección de propiedades y métodos.
		* **Arreglo (Array)**: Una lista ordenada de valores.

	Code:
		// Ejemplo de diferentes tipos de datos
		let edad = 25; // Número
		let nombre = "Juan"; // Cadena de texto
		let esEstudiante = true; // Booleano
		let direccion; // Undefined
		let coche = null; // Null
		let persona = { nombre: "Juan", edad: 25 }; // Objeto
		let numeros = [1, 2, 3, 4, 5]; // Arreglo

	Subheader: Declaración y asignación de variables
	
	Content:
		Las variables en JavaScript se pueden declarar y asignar en una sola línea o en líneas separadas.
		Es importante usar `let` y `const` en lugar de `var` debido a problemas de alcance y hoisting.

		Ejemplos de declaración y asignación:

		* Usar `let` para declarar una variable que puede cambiar.
		* Usar `const` para declarar una constante que no cambiará.

	Code:
		// Declaración separada de la asignación
		let precio;
		precio = 19.99;
		console.log(precio); // Output: 19.99

		// Declaración y asignación en una sola línea
		const autor = "Gabriel García Márquez";
		console.log(autor); // Output: Gabriel García Márquez

	Header: Buenas prácticas con variables
	
	Content: 
		Es importante seguir buenas prácticas al trabajar con variables para escribir código claro y mantenible:

		* Usa nombres descriptivos para las variables.
		* Mantén un estilo de nombrado consistente (ej. camelCase para variables y funciones).
		* Evita el uso de variables globales siempre que sea posible.
		* Usa `const` para valores que no cambiarán, para mejorar la seguridad y legibilidad del código.

	Code:
		// Ejemplo de buenas prácticas
		let precioProducto = 29.99;
		const TASA_IVA = 0.21;
		let precioFinal = precioProducto * (1 + TASA_IVA);
		console.log(precioFinal); // Output: 36.2889
